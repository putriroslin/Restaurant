{"version":3,"file":"app~e4317507.bundle.js","mappings":";gKAUA,QANe,CACb,IAAKA,EAAAA,EACL,cAAeA,EAAAA,EACf,YAAaC,EAAAA,EACb,cAAeC,EAAAA,mCCsBjB,QA9BkB,CAChBC,2BAA0B,WACxB,IAAMC,EAAMC,OAAOC,SAASC,KAAKC,MAAM,GAAGC,cACpCC,EAAaC,KAAKC,aAAaR,GACrC,OAAOO,KAAKE,aAAaH,EAC3B,EAEAI,8BAA6B,WAC3B,IAAMV,EAAMC,OAAOC,SAASC,KAAKC,MAAM,GAAGC,cAC1C,OAAOE,KAAKC,aAAaR,EAC3B,EAEAQ,aAAY,SAAER,GACZ,IAAMW,EAAaX,EAAIY,MAAM,KAC7B,MAAO,CACLC,SAAUF,EAAW,IAAM,KAC3BG,GAAIH,EAAW,IAAM,KACrBI,KAAMJ,EAAW,IAAM,KAE3B,EAEAF,aAAY,SAAEH,GACZ,OACGA,EAAWO,SAAW,IAAH,OAAOP,EAAWO,UAAa,MAClDP,EAAWQ,GAAK,OAAS,KACzBR,EAAWS,KAAO,IAAH,OAAOT,EAAWS,MAAS,GAE/C,mCCLF,QAtBwB,CACtBC,KAAI,YAA+B,WAA3BC,EAAM,EAANA,OAAQC,EAAM,EAANA,OAAQC,EAAO,EAAPA,QACtBF,EAAOG,iBAAiB,SAAS,SAACC,GAChC,EAAKC,cAAcD,EAAOH,EAC5B,IAEAC,EAAQC,iBAAiB,SAAS,SAACC,GACjC,EAAKE,aAAaF,EAAOH,EAC3B,GACF,EAEAI,cAAa,SAAED,EAAOH,GACpBG,EAAMG,kBACNN,EAAOO,UAAUC,OAAO,OAC1B,EAEAH,aAAY,SAAEF,EAAOH,GACnBG,EAAMG,kBACNN,EAAOO,UAAUE,OAAO,OAC1B,mSClBF,svNA8CA,QA7C4B,CACpBX,KAAI,YAA4D,sHAGrB,OAHnCY,EAAmB,EAAnBA,oBAAqBC,EAAmB,EAAnBA,oBAAqBC,EAAU,EAAVA,WACtD,EAAKC,qBAAuBH,EAC5B,EAAKI,YAAcF,EACnB,EAAKG,qBAAuBJ,EAAmB,SAEzC,EAAKK,gBAAe,0CAL0C,EAMtE,EAEMA,cAAa,WAAI,kHACX,OAAFpB,EAAO,EAAKkB,YAAZlB,GAAE,SAEA,EAAKqB,mBAAmBrB,GAAG,kCACnC,EAAKsB,eAAc,sBAEnB,EAAKC,cAAa,0CANC,EAQvB,EAEMF,mBAAkB,SAAErB,GAAI,kIACH,EAAKmB,qBAAqBK,cAAcxB,GAAG,OAApD,OAAVgB,EAAa,EAAH,yBACPA,GAAU,0CAFS,EAG9B,EAEAO,YAAW,WAAI,WACb9B,KAAKwB,qBAAqBQ,UAAYC,EAAAA,EAAAA,gCAEnBC,SAASC,cAAc,eAC/BtB,iBAAiB,QAAO,YAAE,8FAC7B,EAAKa,qBAAqBU,cAAc,EAAKX,aAAY,OAC/D,EAAKE,gBAAe,2CAExB,EAEAE,aAAY,WAAI,WACd7B,KAAKwB,qBAAqBQ,UAAYC,EAAAA,EAAAA,kCAEnBC,SAASC,cAAc,eAC/BtB,iBAAiB,QAAO,YAAE,8FAC7B,EAAKa,qBAAqBW,iBAAiB,EAAKZ,YAAYlB,IAAG,OACrE,EAAKoB,gBAAe,2CAExB,mSC3CF,mjNAgBA,QAfgB,eADhB,EACgB,GADhB,EACgB,UAAG,uFACX,kBAAmBW,UAAS,gBAC0B,OAA1DC,QAAQC,IAAI,+CAA8C,0BAGN,OAAhDC,EAAK,IAAIC,EAAAA,GAAsB,kBAAiB,kBAG9CD,EAAGE,WAAU,OACnBJ,QAAQC,IAAI,6BAA4B,kDAExCD,QAAQC,IAAI,oCAAqC,EAAF,IAAQ,yDAZ3D,+KAcC,kBAbe","sources":["webpack://restaurant-apps/./src/scripts/routes/routes.js","webpack://restaurant-apps/./src/scripts/routes/url-parser.js","webpack://restaurant-apps/./src/scripts/utils/drawer-initiator.js","webpack://restaurant-apps/./src/scripts/utils/like-button-presenter.js","webpack://restaurant-apps/./src/scripts/utils/sw-register.js"],"sourcesContent":["import ListResto from '../views/pages/list-resto'\r\nimport FavoriteResto from '../views/pages/favorite-resto'\r\nimport DetailResto from '../views/pages/detail-resto'\r\n\r\nconst routes = {\r\n  '/': ListResto,\r\n  '/list-resto': ListResto,\r\n  '/favorite': FavoriteResto,\r\n  '/detail/:id': DetailResto\r\n}\r\nexport default routes\r\n","const UrlParser = {\r\n  parseActiveUrlWithCombiner () {\r\n    const url = window.location.hash.slice(1).toLowerCase()\r\n    const splitedUrl = this._urlSplitter(url)\r\n    return this._urlCombiner(splitedUrl)\r\n  },\r\n\r\n  parseActiveUrlWithoutCombiner () {\r\n    const url = window.location.hash.slice(1).toLowerCase()\r\n    return this._urlSplitter(url)\r\n  },\r\n\r\n  _urlSplitter (url) {\r\n    const urlsSplits = url.split('/')\r\n    return {\r\n      resource: urlsSplits[1] || null,\r\n      id: urlsSplits[2] || null,\r\n      verb: urlsSplits[3] || null\r\n    }\r\n  },\r\n\r\n  _urlCombiner (splitedUrl) {\r\n    return (\r\n      (splitedUrl.resource ? `/${splitedUrl.resource}` : '/') +\r\n      (splitedUrl.id ? '/:id' : '') +\r\n      (splitedUrl.verb ? `/${splitedUrl.verb}` : '')\r\n    )\r\n  }\r\n}\r\n\r\nexport default UrlParser\r\n","const DrawerInitiator = {\r\n  init ({ button, drawer, content }) {\r\n    button.addEventListener('click', (event) => {\r\n      this._toggleDrawer(event, drawer)\r\n    })\r\n\r\n    content.addEventListener('click', (event) => {\r\n      this._closeDrawer(event, drawer)\r\n    })\r\n  },\r\n\r\n  _toggleDrawer (event, drawer) {\r\n    event.stopPropagation()\r\n    drawer.classList.toggle('open')\r\n  },\r\n\r\n  _closeDrawer (event, drawer) {\r\n    event.stopPropagation()\r\n    drawer.classList.remove('open')\r\n  }\r\n}\r\n\r\nexport default DrawerInitiator\r\n","import tempaletCreator from '../views/templates/template-creator'\r\n\r\nconst LikeButtonPresenter = {\r\n  async init ({ likeButtonContainer, favoriteRestaurants, restaurant }) {\r\n    this._likeButtonContainer = likeButtonContainer\r\n    this._restaurant = restaurant\r\n    this._favoriteRestaurants = favoriteRestaurants\r\n\r\n    await this._renderButton()\r\n  },\r\n\r\n  async _renderButton () {\r\n    const { id } = this._restaurant\r\n\r\n    if (await this._isRestaurantExist(id)) {\r\n      this._renderLiked()\r\n    } else {\r\n      this._renderLike()\r\n    }\r\n  },\r\n\r\n  async _isRestaurantExist (id) {\r\n    const restaurant = await this._favoriteRestaurants.getRestaurant(id)\r\n    return !!restaurant\r\n  },\r\n\r\n  _renderLike () {\r\n    this._likeButtonContainer.innerHTML = tempaletCreator.createLikeRestoButtonTemplate()\r\n\r\n    const likeButton = document.querySelector('#likeButton')\r\n    likeButton.addEventListener('click', async () => {\r\n      await this._favoriteRestaurants.putRestaurant(this._restaurant)\r\n      this._renderButton()\r\n    })\r\n  },\r\n\r\n  _renderLiked () {\r\n    this._likeButtonContainer.innerHTML = tempaletCreator.createUnlikeRestoButtonTemplate()\r\n\r\n    const likeButton = document.querySelector('#likeButton')\r\n    likeButton.addEventListener('click', async () => {\r\n      await this._favoriteRestaurants.deleteRestaurant(this._restaurant.id)\r\n      this._renderButton()\r\n    })\r\n  }\r\n}\r\n\r\nexport default LikeButtonPresenter\r\n","import * as WorkboxWindow from 'workbox-window'\r\n\r\nconst swRegister = async () => {\r\n  if (!('serviceWorker' in navigator)) {\r\n    console.log('Service Worker not supported in the browser')\r\n    return\r\n  }\r\n  const wb = new WorkboxWindow.Workbox('./sw.bundle.js')\r\n\r\n  try {\r\n    await wb.register()\r\n    console.log('Service worker registered')\r\n  } catch (error) {\r\n    console.log('Failed to register service worker', error)\r\n  }\r\n}\r\n\r\nexport default swRegister\r\n"],"names":["ListResto","FavoriteResto","DetailResto","parseActiveUrlWithCombiner","url","window","location","hash","slice","toLowerCase","splitedUrl","this","_urlSplitter","_urlCombiner","parseActiveUrlWithoutCombiner","urlsSplits","split","resource","id","verb","init","button","drawer","content","addEventListener","event","_toggleDrawer","_closeDrawer","stopPropagation","classList","toggle","remove","likeButtonContainer","favoriteRestaurants","restaurant","_likeButtonContainer","_restaurant","_favoriteRestaurants","_renderButton","_isRestaurantExist","_renderLiked","_renderLike","getRestaurant","innerHTML","tempaletCreator","document","querySelector","putRestaurant","deleteRestaurant","navigator","console","log","wb","WorkboxWindow","register"],"sourceRoot":""}